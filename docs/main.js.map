{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/infrastructure-api.service.ts","webpack:///./src/app/template/apod-template/apod-template.component.css","webpack:///./src/app/template/apod-template/apod-template.component.html","webpack:///./src/app/template/apod-template/apod-template.component.ts","webpack:///./src/app/template/main-template-component.component.css","webpack:///./src/app/template/main-template-component.component.html","webpack:///./src/app/template/main-template-component.component.ts","webpack:///./src/app/template/template.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainTemplateComponentComponent } from './template/main-template-component.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MainTemplateComponentComponent, pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { TemplateModule } from './template/template.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    TemplateModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport UrlDict from './domainUrlDict.json';\n\nimport { isNullOrUndefined } from 'util';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class InfrastructureApiService {\n\n  DataDict: any;\n  ResponceURLDict: any;\n  QueryPrameters: any;\n\n  constructor(private http: HttpClient) {\n    this.DataDict = UrlDict;\n    this.ResponceURLDict = {};\n    this.QueryPrameters = {};\n    this.GenerateResponseUrl();\n  }\n\n  GenerateResponseUrl() {\n    const baseServiceNameList = Object.keys(UrlDict);\n    for (const baseServiceName of baseServiceNameList) {\n      this.getResponseURL(baseServiceName);\n    }\n    console.table(this.ResponceURLDict);\n  }\n\n  getResponseJsonData(): void {\n    console.log(this.ResponceURLDict);\n  }\n\n  getResponseURL(baseServiceName: string): void {\n    const responseURLList: any = {};\n    const baseService: any = this.DataDict[baseServiceName];\n    for (const serviceNumName of Object.keys(baseService)) {\n      const serviceNum: any = baseService[serviceNumName];\n      const serviceName: string = serviceNum.Name;\n      const serviceProperties: any = serviceNum.Properties;\n      let responseURL: string = serviceProperties.RequestURLDomian;\n      const URLAddder: any = serviceProperties.URLAddder;\n      const QueryPram: any = serviceProperties.QueryString;\n      if (!isNullOrUndefined(URLAddder)) {\n        const responseURLwithAdderList: any = {};\n        let i: number = 0;\n        for (const URLAddNumName of Object.keys(URLAddder)) {\n          responseURL = serviceProperties.RequestURLDomian;\n          const adder: any = URLAddder[URLAddNumName];\n          // tslint:disable-next-line: max-line-length\n          responseURL = responseURL.concat(`${(adder.IncludeVariableName === 'true') ? adder.VariableName + '/' : ''}${(true) ? adder.DefaultValue : 'UserInput'}?`);\n          if (!isNullOrUndefined(QueryPram)) {\n            for (const propertyName of Object.keys(QueryPram)) {\n              const property: any = QueryPram[propertyName];\n              // tslint:disable-next-line: max-line-length\n              this.QueryPrameters[property.VariableName] = (isNullOrUndefined(this.QueryPrameters[property.VariableName])) ? property.DefaultValue : this.QueryPrameters[property.VariableName];\n              const date = new Date();\n              if (isNullOrUndefined(this.QueryPrameters[property.VariableName])) {\n                if (property.VariableName === 'date') {\n                  // tslint:disable-next-line: max-line-length\n                  this.QueryPrameters[property.VariableName] = `${date.getFullYear().toString().padStart(4, '0')}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n                } else {\n                  this.QueryPrameters[property.VariableName] = property.DefaultValue;\n                }\n              } else {\n                this.QueryPrameters[property.VariableName] = this.QueryPrameters[property.VariableName]\n              }\n              responseURL = responseURL.concat(`${property.VariableName}=${this.QueryPrameters[property.VariableName]}&`);\n            }\n          }\n          responseURLwithAdderList[i.toString()] = responseURL;\n          // this.http.get(responseURL).subscribe((body) => {\n          // });\n          // i = i + 1;\n        }\n        responseURLList[serviceName] = (Object.keys(URLAddder).length === 1) ? responseURLwithAdderList[0] : responseURLwithAdderList;\n      } else {\n        if (!isNullOrUndefined(QueryPram)) {\n          for (const propertyName of Object.keys(QueryPram)) {\n            const property: any = QueryPram[propertyName];\n            const date = new Date();\n            if (isNullOrUndefined(this.QueryPrameters[property.VariableName])) {\n              if (property.VariableName === 'date') {\n                // tslint:disable-next-line: max-line-length\n                this.QueryPrameters[property.VariableName] = `${date.getFullYear().toString().padStart(4, '0')}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n              } else {\n                this.QueryPrameters[property.VariableName] = property.DefaultValue;\n              }\n            } else {\n              this.QueryPrameters[property.VariableName] = this.QueryPrameters[property.VariableName]\n            }\n            responseURL = responseURL.concat(`${property.VariableName}=${this.QueryPrameters[property.VariableName]}&`);\n          }\n        }\n        responseURLList[serviceName] = responseURL;\n        // this.http.get(responseURL).subscribe((body) => {\n        //   responseURLList[serviceName] = body;\n        //   // document.getElementById(baseServiceName).innerHTML = JSON.stringify(body);\n        // });\n      }\n    }\n    this.ResponceURLDict[baseServiceName] = responseURLList;\n  }\n\n  getJsonResponse(url: string): any {\n    let response: any = {};\n    this.http.get(url).subscribe((body) => {\n      response = body;\n      return response;\n    });\n    return null;\n  }\n\n  demoTable(columnDefs: Array<string>, rowData: any): string {\n    let table: string = '';\n    table = table.concat('<table class=\"table table-striped table-bordered table-hover\">');\n    table = table.concat('<thead class=\"thead-dark\"><tr>');\n    for (const header of columnDefs) {\n      table = table.concat(`<th scope=\"col\">${header}</th>`);\n    }\n    table = table.concat('</tr></thead>');\n    for (const header of columnDefs) {\n      console.log(typeof (rowData[header]) === 'object');\n      if (typeof (rowData[header]) === 'object') {\n        table = table.concat(`<td>${this.demoTable(Object.keys(rowData[header]), rowData[header])}</td>`);\n      }\n      table = table.concat(`<td>${rowData[header]}</td>`);\n    }\n    table = table.concat('</table>');\n    return table;\n  }\n\n\n\n  // \"Category\" : {\n  //   \"0\": {\n  //     \"Name\": \"CategoryTitle\",\n  //     \"Properties\": {\n  //       \"RequestURLDomian\": \"Domain\",\n  //       \"URLAddder\": {\n  //         \"0\": {\n  //           \"VariableName\": \"Asteroid_Id\",\n  //           \"DefaultValue\": \"3542519\"\n  //         }\n  //       },\n  //       \"QueryString\": {\n  //         \"0\": {\n  //           \"VariableName\": \"Pram1\",\n  //           \"DefaultValue\": \"2019-05-20\"\n  //         },\n  //         \"1\": {\n  //           \"VariableName\": \"Pram2\",\n  //           \"DefaultValue\": \"true\"\n  //         },\n  //         \"2\": {\n  //           \"VariableName\": \"api_key\",\n  //           \"DefaultValue\": \"ZXn3VY8awAQjbLgQYxaW0Jph0AoJFkS1hdhxDZWB\"\n  //         }\n  //       }\n  //     }\n  //   }\n  // },\n\n\n\n  // \"5\": {\n  //   \"Name\": \"Neo - Sentry Asteroid_Id\",\n  //   \"Properties\": {\n  //     \"RequestURLDomian\": \"https://api.nasa.gov/neo/rest/v1/neo/sentry/\",\n  //     \"URLAddder\": {\n  //       \"0\": {\n  //         \"VariableName\": \"Asteroid_Id\",\n  //         \"DefaultValue\": \"3542519\",\n  //         \"IncludeVariableName\": \"false\"\n\n  //       }\n  //     },\n  //     \"QueryString\": {\n  //       \"0\": {\n  //         \"VariableName\": \"api_key\",\n  //         \"DefaultValue\": \"ZXn3VY8awAQjbLgQYxaW0Jph0AoJFkS1hdhxDZWB\"\n  //       }\n  //     }\n  //   }\n  // },\n\n\n\n  // Take Care of : catalog: default is set to ALL (choices: ALL, SWRC_CATALOG, JANG_ET_AL_CATALOG)\n  // keyword: default is set to NONE (example choices: swpc_annex)\n  // location: default to ALL (choices: Earth, MESSENGER, STEREO A, STEREO B)\n  // catalog: default to ALL (choices: SWRC_CATALOG, WINSLOW_MESSENGER_ICME_CATALOG)\n  // 'type' could be: all, FLR, SEP, CME, IPS, MPC, GST, RBE, report\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlbXBsYXRlL2Fwb2QtdGVtcGxhdGUvYXBvZC10ZW1wbGF0ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid jumbotron-fluid mx-auto d-block p-5 ml-4\\\">\\n  <div class=\\\"row\\\" *ngFor=\\\"let baseService of baseServiceList\\\">\\n    <h1 class=\\\"display-1 w-100\\\"><b>{{baseServiceName}}</b></h1>\\n    <h1 class=\\\"display-4 w-100 mb-4\\\">{{baseService}}</h1>\\n    <input type=\\\"date\\\" class=\\\"mr-4\\\" id='date' [(ngModel)]=\\\"infrastructureApi.QueryPrameters.date\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"reloadAPoD()\\\">Show</button>\\n    <span class=\\\"w-100\\\"></span>\\n    <div class=\\\"mt-2 ml-2\\\" *ngIf=\\\"serviceResponseBodyList[baseService].media_type==='image'\\\">\\n      <input type=\\\"checkbox\\\" [(ngModel)]=\\\"showHdImage\\\">&nbsp;Show HD Image\\n    </div>\\n    <h2 class=\\\"w-100 mt-3\\\">{{serviceResponseBodyList[baseService].title}}</h2>\\n    <div class=\\\"row\\\" *ngIf=\\\"serviceResponseBodyList[baseService].media_type === 'image' && !showHdImage\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <p class=\\\"text-justify\\\">{{serviceResponseBodyList[baseService].explanation}}</p>\\n        <span *ngIf=\\\"serviceResponseBodyList[baseService].copyright\\\">\\n          <b>Copyright:</b>&nbsp;{{serviceResponseBodyList[baseService].copyright}}\\n        </span>\\n      </div>\\n      <img [src]=\\\"serviceResponseBodyList[baseService].url\\\" class=\\\"img-fluid border rounded-lg col-sm-6 p-3 mx-auto d-block\\\">\\n    </div>\\n    <div *ngIf=\\\"serviceResponseBodyList[baseService].media_type === 'image' && showHdImage\\\">\\n      <p class=\\\"text-justify\\\">{{serviceResponseBodyList[baseService].explanation}}</p>\\n      <span class=\\\"w-100\\\" *ngIf=\\\"serviceResponseBodyList[baseService].copyright\\\"><b>Copyright:</b>&nbsp;{{serviceResponseBodyList[baseService].copyright}}</span>\\n      <img [src]=\\\"serviceResponseBodyList[baseService].hdurl\\\" class=\\\"img-fluid border rounded-lg p-3 mx-auto d-block\\\">\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"serviceResponseBodyList[baseService].media_type === 'video'\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <p class=\\\"text-justify\\\">{{serviceResponseBodyList[baseService].explanation}}</p>\\n        <span *ngIf=\\\"serviceResponseBodyList[baseService].copyright\\\">\\n          <b>Copyright:</b>&nbsp;{{serviceResponseBodyList[baseService].copyright}}\\n        </span>\\n      </div>\\n      <iframe type=\\\"text/html\\\" class=\\\"col-sm-6\\\" height=\\\"500\\\" [src]=\\\"serviceResponseBodyList[baseService].url\\\" frameborder=\\\"0\\\"></iframe>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, SecurityContext } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport UrlDict from './../../services/domainUrlDict.json';\nimport { InfrastructureApiService } from 'src/app/services/infrastructure-api.service';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'app-apod-template',\n  templateUrl: './apod-template.component.html',\n  styleUrls: ['./apod-template.component.css']\n})\nexport class ApodTemplateComponent implements OnInit {\n\n  tableObject: object;\n  baseServiceName: string;\n  apodBaseService: Array<string>;\n  baseServiceNameList: Array<string>;\n  baseServiceList: Array<string>;\n  serviceResponseBodyList: object;\n  showHdImage: boolean;\n\n  constructor(public infrastructureApi: InfrastructureApiService, private http: HttpClient, private sanitizer: DomSanitizer) {\n    this.tableObject = {};\n    this.showHdImage = false;\n    this.baseServiceName = 'APoD';\n    this.serviceResponseBodyList = {};\n    this.baseServiceNameList = Object.keys(UrlDict);\n    this.baseServiceList = Object.keys(this.infrastructureApi.ResponceURLDict[this.baseServiceName]);\n    this.reloadAPoD();\n  }\n\n  reloadAPoD(): void {\n    this.infrastructureApi.GenerateResponseUrl();\n    for (const baseService of this.baseServiceList) {\n      console.log(this.infrastructureApi.ResponceURLDict[this.baseServiceName][baseService]);\n      this.http.get(this.infrastructureApi.ResponceURLDict[this.baseServiceName][baseService]).subscribe(\n        (body) => {\n          this.serviceResponseBodyList[baseService] = {};\n          this.serviceResponseBodyList[baseService] = body;\n          // tslint:disable-next-line: max-line-length\n          this.serviceResponseBodyList[baseService].url = this.sanitizer.bypassSecurityTrustResourceUrl(this.serviceResponseBodyList[baseService].url);\n          console.table({'responseObjectDictionary': this.serviceResponseBodyList[baseService]});\n          // this.tableObject[baseservice] = this.infrastructureApi.demoTable(Object.keys(body), body);\n          // (document.getElementById(`${baseservice}-table`) as HTMLSpanElement).innerHTML = this.tableObject[baseservice];\n        },\n        (error: any) => {\n          console.log(error);\n        },\n        () => {}\n      );\n    }\n  }\n\n  UrlSanitizer(url: any): any {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlbXBsYXRlL21haW4tdGVtcGxhdGUtY29tcG9uZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- <br />\\r\\n<br />\\r\\n<div class=\\\"table-responsive\\\">\\r\\n  <span id='table'></span>\\r\\n</div>\\r\\n<br /> -->\\r\\n<app-apod-template></app-apod-template>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { InfrastructureApiService } from '../services/infrastructure-api.service';\r\nimport UrlDict from './../services/domainUrlDict.json';\r\n\r\n@Component({\r\n  selector: 'app-main-template-component',\r\n  templateUrl: './main-template-component.component.html',\r\n  styleUrls: ['./main-template-component.component.css']\r\n})\r\nexport class MainTemplateComponentComponent implements OnInit {\r\n\r\n  baseServiceNameList: Array<string>;\r\n  columnDefs: Array<string>;\r\n  rowData: object;\r\n  table: string;\r\n\r\n  constructor(public infrastructureApi: InfrastructureApiService, private http: HttpClient) {\r\n    this.table = '';\r\n    this.baseServiceNameList = Object.keys(UrlDict);\r\n  }\r\n\r\n  demoTable(columnDefs: Array<string>, rowData: object): string {\r\n    let table: string = '';\r\n    table = table.concat('<table class=\"table table-striped table-bordered table-hover\">');\r\n    table = table.concat('<thead class=\"thead-dark\"><tr>');\r\n    for (const header of columnDefs) {\r\n      table = table.concat(`<th scope=\"col\">${header}</th>`);\r\n    }\r\n    table = table.concat('</tr></thead>');\r\n    for (const header of columnDefs) {\r\n      console.log(typeof(rowData[header]) === 'object');\r\n      if (typeof(rowData[header]) === 'object') {\r\n        table = table.concat(`<td>${this.demoTable(Object.keys(rowData[header]), rowData[header])}</td>`);\r\n      }\r\n      table = table.concat(`<td>${rowData[header]}</td>`);\r\n    }\r\n    table = table.concat('</table>');\r\n    return table;\r\n  }\r\n\r\n   ngOnInit() {\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MainTemplateComponentComponent } from './main-template-component.component';\r\nimport { ApodTemplateComponent } from './apod-template/apod-template.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MainTemplateComponentComponent,\r\n    ApodTemplateComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class TemplateModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}